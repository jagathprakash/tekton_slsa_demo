# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  generateName: clone-build-push-run-
spec:
  serviceAccountName: jp-tk-ksa
  taskSpec:
    workspaces:
      - name: source
        description: The git repo will be cloned onto the volume backing this Workspace.
    params:
      - name: url
        description: Repository URL to clone from.
        type: string
      - name: gitInitImage
        description: The image providing the git-init binary that this Task runs.
        type: string
        default: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.29.0"
      - name: userHome
        description: |
          Absolute path to the user's home directory.
        type: string
        default: "/tekton/home"
      - name: IMAGE
        description: Name (reference) of the image to build
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        default: ./Dockerfile
      - name: CONTEXT
        description: The build context used by Kaniko.
        default: ./
      - name: EXTRA_ARGS
        type: array
        default: []
      - name: BUILDER_IMAGE
        description: The image on which builds will run (default is v1.5.1)
        default: gcr.io/kaniko-project/executor:v1.5.1@sha256:c6166717f7fe0b7da44908c986137ecfeab21f31ec3992f6e128fff8a94be8a5
    results:
      - name: commit
        description: The precise commit SHA that was fetched by this Task.
      - name: url
        description: The precise URL that was fetched by this Task.
      - name: IMAGE_DIGEST
        description: Digest of the image just built.
      - name: IMAGE_URL
        description: URL of the image just built.
    steps:
      - name: clone
        image: "$(params.gitInitImage)"
        env:
        - name: HOME
          value: "$(params.userHome)"
        - name: PARAM_URL
          value: $(params.url)
        - name: WORKSPACE_OUTPUT_PATH
          value: $(workspaces.source.path)
        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
        script: |
          #!/usr/bin/env sh
          set -eu
          CHECKOUT_DIR="${WORKSPACE_OUTPUT_PATH}/"

          /ko-app/git-init \
            -url="${PARAM_URL}" \
            -path="${CHECKOUT_DIR}" 
          cd "${CHECKOUT_DIR}"
          RESULT_SHA="$(git rev-parse HEAD)"
          EXIT_CODE="$?"
          if [ "${EXIT_CODE}" != 0 ] ; then
            exit "${EXIT_CODE}"
          fi
          printf "%s" "${RESULT_SHA}" > "$(results.commit.path)"
          printf "%s" "${PARAM_URL}" > "$(results.url.path)"
      - name: build-and-push
        workingDir: $(workspaces.source.path)
        image: $(params.BUILDER_IMAGE)
        args:
          - $(params.EXTRA_ARGS)
          - --dockerfile=$(params.DOCKERFILE)
          - --context=$(workspaces.source.path)/$(params.CONTEXT) # The user does not need to care the workspace and the source.
          - --destination=$(params.IMAGE)
          - --digest-file=$(results.IMAGE_DIGEST.path)
        securityContext:
          runAsUser: 0
      - name: write-url
        image: docker.io/library/bash:5.1.4@sha256:b208215a4655538be652b2769d82e576bc4d0a2bb132144c060efc5be8c3f5d6
        script: |
          set -e
          image="$(params.IMAGE)"
          echo -n "${image}" | tee "$(results.IMAGE_URL.path)"
  workspaces:
  - name: source
    emptyDir: {}
  params:
  - name: url
    value: https://github.com/bendory/mini-true.git
  - name: IMAGE
    value: us-docker.pkg.dev/jagathprakash-test/jp-tk-repo/tekton-slsa-demo